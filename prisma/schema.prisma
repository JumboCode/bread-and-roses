// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  VOLUNTEER
  ADMIN
}

enum TimeSlotStatus {
  AVAILABLE
  CHECKED_IN
  COMPLETED
}

model User {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  role               Role               @default(VOLUNTEER)
  firstName          String             @default("")
  lastName           String             @default("")
  email              String             @unique
  password           String             @default("")
  volunteerDetails   VolunteerDetails?
  organizationId     String?            @db.ObjectId
  organization       Organization?      @relation(fields: [organizationId], references: [id])
  code               Code?
  eventIds           String[]           @db.ObjectId
  events             Event[]            @relation(fields: [eventIds], references: [id])
  timeSlots          TimeSlot[]
  volunteerSessions   VolunteerSession[]
}

model VolunteerDetails {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  ageOver14          Boolean            @default(false)
  firstTime          Boolean            @default(false)
  country            String             @default("")
  address            String             @default("")
  city               String             @default("")
  state              String             @default("")
  zipCode            String             @default("")
  hasLicense         Boolean            @default(false)
  speaksEsp          Boolean            @default(false)
  volunteerType      String             @default("")
  hoursWorked        Int                @default(0)
  whyJoin            String             @default("")
  comments           String             @default("")
  user               User               @relation(fields: [userId], references: [id])
  userId             String             @unique @db.ObjectId
}

model VolunteerSession {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  user               User               @relation(fields: [userId], references: [id])
  userId             String             @db.ObjectId
  organizationId     String?            @db.ObjectId
  organization       Organization?      @relation(fields: [organizationId], references: [id])
  checkInTime        DateTime
  checkOutTime       DateTime?
  durationHours      Float?
  dateWorked         DateTime
  timeSlot           TimeSlot?          @relation(fields: [timeSlotId], references: [id])
  timeSlotId         String?            @db.ObjectId @unique
}

model Code {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  codeString         String             @default("")
  expire             DateTime           @default(now())
  user               User               @relation(fields: [userId], references: [id])
  userId             String             @unique @db.ObjectId
}

model Event {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  userIds            String[]           @db.ObjectId
  users              User[]             @relation(fields: [userIds], references: [id])
  eventName          String             @default("")
  dateTime           DateTime           @default(now())
  description        String             @default("")
  maxPeople          Int                @default(0)
}

model Organization {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  name               String             @unique
  normalizedName     String             @unique
  users              User[]
  timeSlots          TimeSlot[]
  volunteerSessions   VolunteerSession[]
}

model TimeSlot {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  userId             String             @db.ObjectId
  user               User               @relation(fields: [userId], references: [id])
  organizationId     String?            @db.ObjectId
  organization       Organization?      @relation(fields: [organizationId], references: [id])
  startTime          DateTime
  endTime            DateTime
  durationHours      Float
  date               DateTime
  approved           Boolean            @default(true)
  status             TimeSlotStatus     @default(AVAILABLE)
  volunteerSession   VolunteerSession?
  capacity           Int                @default(1)
}

model CustomDay {
  id                 String             @id @default(auto()) @map("_id") @db.ObjectId
  date               DateTime
  startTime          DateTime
  endTime            DateTime
  title              String?
  description        String?
}